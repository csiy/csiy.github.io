{"meta":{"title":"CSIY","subtitle":"好好学习，天天向上","description":"悟已往之不谏，知来者之可追","author":"csiy","url":"https://csiy.github.io"},"pages":[],"posts":[{"title":"tensorflow学习","slug":"tensorflow","date":"2018-04-12T12:55:00.000Z","updated":"2018-04-13T10:58:11.290Z","comments":true,"path":"2018/04/12/tensorflow/","link":"","permalink":"https://csiy.github.io/2018/04/12/tensorflow/","excerpt":"","text":"tensorflowtensorflow是由谷歌开发的用户机器学习和深度神经网络研究的一个用于人工智能的开源工具。项目托管在github上传送门。 数据流图什么是数据流图？ 数据流图用“结点”（nodes）和“线”(edges)的有向图来描述数学计算。“节点” 一般用来表示施加的数学操作，但也可以表示数据输入（feed in）的起点/输出（push out）的终点，或者是读取/写入持久变量（persistent variable）的终点。“线”表示“节点”之间的输入/输出关系。这些数据“线”可以输运“size可动态调整”的多维数据数组，即“张量”（tensor）。张量从图中流过的直观图像是这个工具取名为“Tensorflow”的原因。一旦输入端的所有张量准备好，节点将被分配到各种计算设备完成异步并行地执行运算。 安装tensorflowwin10 安装新版本的 TensorFlow（1.6）会出现此问题，根据 TensorFlow 1.6.0 的发布说明，该版本会使用 AVX 指令，所以可能会在旧 CPU 上不能运行 下载并安装python3 1pip install tensorflow==1.5 ###linux安装 在win10系统下可以通过微软在线商店下载安装linux子系统。这将需要在win10中设置，在控制面板的“启用或关闭Windows功能”中勾选“适用于Linux的Windows子系统(WSL)” 我这里下载和安装的是ubuntu子系统。 点击ubuntu图标进入ubuntu系统。本学习笔记使用的是tensorflow1.3.0版本，基于python2.7。在ubuntu系统中默认安装的的是python 3.5.2，所以先安装python2.7版本 123sudo apt-get install pythonsudo apt-get install python-pipsudo pip install --upgrade https://storage.googleapis.com/tensorflow/linux/gpu/tensorflow-1.3.0-cp27-none-linux_x86_64.whl tensorboard 可视化工具启动tensorboard1tensorboard --logdir=/path/to/log-directory","categories":[{"name":"学习","slug":"学习","permalink":"https://csiy.github.io/categories/学习/"}],"tags":[{"name":"tensorflow","slug":"tensorflow","permalink":"https://csiy.github.io/tags/tensorflow/"},{"name":"学习","slug":"学习","permalink":"https://csiy.github.io/tags/学习/"}],"keywords":[{"name":"学习","slug":"学习","permalink":"https://csiy.github.io/categories/学习/"}]},{"title":"搭建全自动博客系统（HEXO+GITHUB+TRAVIS CI）","slug":"travis","date":"2018-04-10T04:47:44.000Z","updated":"2018-04-13T10:58:11.290Z","comments":true,"path":"2018/04/10/travis/","link":"","permalink":"https://csiy.github.io/2018/04/10/travis/","excerpt":"","text":"前言这是本人第一篇文章，也不知道写点啥，就写写刚刚搭建成功的自动部署博客系统。 HEXOHexo 是一个快速、简洁且高效的博客框架。Hexo 使用 Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。 GITHUBgithub是一个面向开源及私有软件项目的托管平台，因为只支持git 作为唯一的版本库格式进行托管，故名gitHub。 TRAVIS CITRAVIS CI开源的持续集成项目，用好这个工具不仅可以提高效率，还能使开发流程更可靠和专业化，从而提高软件的价值。而且，它对于开源项目是免费的，不花一分钱，就能帮你做掉很多事情。 开始吧前期准备安装下面的工具到你的电脑 Git 是一个开源的分布式版本控制系统，可以有效、高速的处理从很小到非常大的项目版本管理。 Visual Studio Code 该编辑器也集成了所有一款现代编辑器所应该具备的特性，包括语法高亮，可定制的热键绑定，括号匹配以及代码片段收集，拥有对 Git 的开箱即用的支持，并且支持windows、mac、linux。 nodejs 可以用Javascript写服务器代码，前端开发爽歪歪。 注册github账号传送门 创建项目并关联github远程仓库在github上创建项目远程仓库 将创建好的项目克隆到本地 1git clone git@github.com:yourname/myblog.git 使用Visual Studio Code打开项目（将项目设置为工作区） 按Ctrl + `打开终端 12npm install hexo-cli -g #安装hexohexo init myblog 在我们的项目根目录中添加.travis.yml文件 123456789101112131415161718192021222324252627282930language: node_jsnode_js: stable# S: Build Lifecycleinstall: - npm install#before_script: # - npm install -g gulpscript: - hexo gafter_script: - cd ./public - git init - git config user.name \"yourname\" - git config user.email \"youremail@outlook.com\" - git add . - git commit -m \"Update docs\" - git push --force --quiet \"https://$&#123;GH_TOKEN&#125;@$&#123;GH_REF&#125;\" master:master# E: Build LifeCyclebranches: only: - masterenv: global: - GH_REF: github.com/youname/youname.github.io.git OK ! 项目创建完毕，现在按Ctrl + Shift + G 打开源代码管理 添加修改到git并推送到远程仓库 提交不了？请添加ssh密钥到github上添加密钥 创建免费的博客 （GitHub Pages）再在github上创建一个项目，项目名称为 username.github.io 。。。。 好了，博客已经开通了你的地址是https://username.github.io/ 高端大气上档次的自动构建TRAVIS CI 跟 github 是两对好基友。。。。 在TRAVIS CI上使用github账户登陆 进入 https://travis-ci.org/profile/yourname 就能看到我们原先创建的两个项目啦 将我们的myblog项目打上勾,这样只要github上有内容更变，TRAVIS就能感知到 敲黑板！划重点！ 为了能让TRAVIS CI能将代码提交到我们的首页项目，需要为他设置token环境变量 在github的settings中找到 developers settings添加Personal access tokens 除了delete_repo其他全部勾选，生成token。请把token保存下来，应为下次过来就看不到了 在 TRAVIS CI 的具体项目的setting中添加环境变量 GH_TOKEN 好了，大功告成，休息休息","categories":[{"name":"教程","slug":"教程","permalink":"https://csiy.github.io/categories/教程/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"https://csiy.github.io/tags/hexo/"},{"name":"github","slug":"github","permalink":"https://csiy.github.io/tags/github/"},{"name":"travis ci","slug":"travis-ci","permalink":"https://csiy.github.io/tags/travis-ci/"},{"name":"node","slug":"node","permalink":"https://csiy.github.io/tags/node/"}],"keywords":[{"name":"教程","slug":"教程","permalink":"https://csiy.github.io/categories/教程/"}]}]}